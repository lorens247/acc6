<?php

namespace $NAMESPACE$;

use Illuminate\Support\ServiceProvider as Provider;
use Illuminate\Database\Eloquent\Factory;

class $NAME$ extends Provider
{
    /**
     * Boot the application events.
     *
     * @return void
     */
    public function boot()
    {
        $this->loadConfig();
        $this->loadViews();
        $this->loadTranslations();
        $this->loadFactories();
        $this->loadMigrations();
    }

    /**
     * Register the service provider.
     *
     * @return void
     */
    public function register()
    {
        $this->loadRoutes();
    }

    /**
     * Load config.
     *
     * @return void
     */
    protected function loadConfig()
    {
        $this->publishes([
            __DIR__ . '/../$PATH_CONFIG$/config.php' => config_path('$ALIAS$.php'),
        ], 'config');

        $this->mergeConfigFrom(
            __DIR__ . '/../$PATH_CONFIG$/config.php', '$ALIAS$'
        );
    }

    /**
     * Load views.
     *
     * @return void
     */
    public function loadViews()
    {
        $viewPath = resource_path('views/modules/$ALIAS$');

        $sourcePath = __DIR__ . '/../$PATH_VIEWS$';

        $this->publishes([
            $sourcePath => $viewPath
        ],'views');

        $this->loadViewsFrom(array_merge(array_map(function ($path) {
            return $path . '/modules/$ALIAS$';
        }, \Config::get('view.paths')), [$sourcePath]), '$ALIAS$');
    }

    /**
     * Load translations.
     *
     * @return void
     */
    public function loadTranslations()
    {
        $langPath = resource_path('lang/modules/$ALIAS$');

        if (is_dir($langPath)) {
            $this->loadTranslationsFrom($langPath, '$ALIAS$');
        } else {
            $this->loadTranslationsFrom(__DIR__ . '/../$PATH_LANG$', '$ALIAS$');
        }
    }

    /**
     * Load an additional directory of factories.
     *
     * @return void
     */
    public function loadFactories()
    {
        if (!app()->environment('production') && $this->app->runningInConsole()) {
            app(Factory::class)->load(__DIR__ . '/../$FACTORIES_PATH$');
        }
    }

    /**
     * Load migrations.
     *
     * @return void
     */
    public function loadMigrations()
    {
        $this->loadMigrationsFrom(__DIR__ . '/../$MIGRATIONS_PATH$');
    }

    /**
     * Load routes.
     *
     * @return void
     */
    public function loadRoutes()
    {
        if (app()->routesAreCached()) {
            return;
        }

        $routes = [
            'web.php',
            'api.php',
        ];

        foreach ($routes as $route) {
            $this->loadRoutesFrom(__DIR__ . '/../$ROUTES_PATH$/' . $route);
        }
    }

    /**
     * Get the services provided by the provider.
     *
     * @return array
     */
    public function provides()
    {
        return [];
    }
}
